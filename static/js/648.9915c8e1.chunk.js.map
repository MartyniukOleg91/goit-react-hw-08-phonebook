{"version":3,"file":"static/js/648.9915c8e1.chunk.js","mappings":"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","sources":["webpack:///goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","webpack:///goit-react-hw-08-phonebook/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","webpack:///goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnAddContact\":\"ContactForm_btnAddContact__AepU1\",\"nameInput\":\"ContactForm_nameInput__QSf3L\",\"numberInput\":\"ContactForm_numberInput__fY5H2\",\"form\":\"ContactForm_form__dhl+T\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const type = e.target.name;\n    switch (type) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setPhone(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      reset();\n\n      return Notiflix.Notify.info(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name\n        <input\n          className={css.nameInput}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={css.numberInput}\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.btnAddContact} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__aUSMv\",\"btnDelete\":\"ContactItem_btnDelete__pqKqR\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <li className={css.contactItem}>\n      <span>\n        {name} <a href={`tel:${number}`}>{number}</a>\n      </span>\n      <button className={css.btnDelete} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactItem from './ContactItem/ContactItem';\nimport { getFilterValue, getContacts } from 'redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterValue = useSelector(getFilterValue);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            ></ContactItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeValue } from 'redux/contacts/filterSlice';\nimport { getFilterValue } from 'redux/contacts/selectors';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contact by name\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        value={filterValue}\n        onChange={e => dispatch(changeValue(e.target.value))}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst MyLoader = props => (\n<ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#75a7a7\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{}}\n    wrapperClassName=\"\"\n    visible={true}\n  />\n);\n\nexport default MyLoader;","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport MyLoader from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  title: {\n    color: '#fff3cc',\n    marginBottom: 20,\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: '#ffffff',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n};\n\nexport default function Contacts() {\n  const { isLoading, error } = useSelector(state => state.contacts);\n  return (\n    <>\n      <h1 style={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 style={styles.subtitle}>Contacts</h2>\n      <Filter />\n      {isLoading && <MyLoader />}\n      {error && <h2>An error: {error}</h2>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","currentTarget","value","reset","onSubmit","preventDefault","form","elements","number","some","contact","toLowerCase","Notiflix","addContact","className","css","onChange","type","pattern","title","required","ContactItem","id","href","onClick","deleteContact","ContactList","useEffect","fetchContacts","filterValue","visibleContacts","includes","length","map","Filter","changeValue","props","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","styles","marginBottom","fontSize","textAlign","subtitle","Contacts","isLoading","error","style"],"sourceRoot":""}